"use strict";(self.webpackChunkhearth_website=self.webpackChunkhearth_website||[]).push([[478],{478:(e,n,a)=>{a.r(n),a.d(n,{default:()=>H});var t=a(8692),r=a(3935),o=a(3964),i=a(6491),s=a(8060),c=a(3239),l=a(2053),d=a(226),g=a(5333),h=a(6699),m=a(1277),p=a(899),u=a(2235),x=a(249),b=a(4446),f=a(8772),y=a(4763),v=a(9950),A=a(2074),w=a(9939),j=a(172),k=a(8785),C=a(4414);const E=(0,v.memo)((e=>{let{children:n,language:a="rust"}=e;const[t,r]=(0,v.useState)(!1),o=(0,v.useCallback)((async()=>{try{await navigator.clipboard.writeText(n),r(!0)}catch(e){console.error("Failed to copy code:",e)}}),[n]),i=(0,v.useCallback)((()=>{r(!1)}),[]),s=(0,v.useMemo)((()=>(e=>{let n=e;return n=n.replace(/\b(use|struct|impl|fn|let|mut|const|pub|mod|match|if|else|for|while|loop|return|break|continue|self|Self)\b/g,'<span class="keyword">$1</span>'),n=n.replace(/\b(u8|u16|u32|u64|u128|i8|i16|i32|i64|i128|f32|f64|bool|char|str|String|Vec|Option|Result)\b/g,'<span class="type">$1</span>'),n=n.replace(/(\w+)(?=\()/g,'<span class="function">$1</span>'),n=n.replace(/(\w+)!/g,'<span class="macro">$1!</span>'),n=n.replace(/"([^"]*)"/g,'<span class="string">"$1"</span>'),n=n.replace(/'([^']*)'/g,"<span class=\"string\">'$1'</span>"),n=n.replace(/(\/\/[^\n]*)/g,'<span class="comment">$1</span>'),n=n.replace(/(\/\*[\s\S]*?\*\/)/g,'<span class="comment">$1</span>'),n=n.replace(/\b(\d+)\b/g,'<span class="number">$1</span>'),n=n.replace(/(#\[[\s\S]*?\])/g,'<span class="attribute">$1</span>'),n})(n)),[n]);return(0,C.jsxs)(C.Fragment,{children:[(0,C.jsxs)(u.A,{component:"figure",role:"img","aria-label":"Code block in ".concat(a),sx:{p:2,bgcolor:"#1e1e1e",my:2,overflow:"auto",borderRadius:2,border:"1px solid #333",position:"relative","&:hover .copy-button":{opacity:1},"&:focus-within .copy-button":{opacity:1},"& pre":{margin:0,fontFamily:'"Fira Code", "Consolas", "Monaco", monospace',fontSize:"14px",lineHeight:1.6},"& .keyword":{color:"#569cd6",fontWeight:"bold"},"& .type":{color:"#4ec9b0"},"& .function":{color:"#dcdcaa"},"& .macro":{color:"#c586c0"},"& .string":{color:"#ce9178"},"& .comment":{color:"#6a9955",fontStyle:"italic"},"& .number":{color:"#b5cea8"},"& .attribute":{color:"#9cdcfe"}},children:[(0,C.jsx)(j.A,{title:"Copy code to clipboard",children:(0,C.jsx)(g.A,{className:"copy-button",onClick:o,"aria-label":"Copy code to clipboard",sx:{position:"absolute",top:8,right:8,opacity:0,transition:"opacity 0.2s ease",color:"#999",backgroundColor:"rgba(255,255,255,0.1)","&:hover":{backgroundColor:"rgba(255,255,255,0.2)",color:"#fff"},"&:focus":{opacity:1,outline:"2px solid #ff4500",outlineOffset:"2px"},zIndex:1},size:"small",children:(0,C.jsx)(w.A,{fontSize:"small","aria-hidden":"true"})})}),(0,C.jsx)("pre",{role:"code","aria-label":"".concat(a," code snippet"),dangerouslySetInnerHTML:{__html:s}})]}),(0,C.jsx)(k.A,{open:t,autoHideDuration:2e3,onClose:i,message:"Code copied to clipboard!",anchorOrigin:{vertical:"bottom",horizontal:"center"},role:"status","aria-live":"polite"})]})}));E.displayName="CodeBlock";const G=E;var R=a(5991);const H=()=>{const[e,n]=(0,v.useState)(0),[a,w]=(0,v.useState)("getting-started"),j=(0,v.useMemo)((()=>[{title:"Getting Started",id:"getting-started"},{title:"Installation",id:"installation"},{title:"Basic Usage",id:"basic-usage"},{title:"Core Concepts",id:"core-concepts"},{title:"Cargo Commands",id:"cargo-commands"},{title:"API Reference",id:"api-reference"}]),[]);return(0,v.useEffect)((()=>{let e=!1;const a=()=>{e||(requestAnimationFrame((()=>{const a=window.pageYOffset,t=document.documentElement.scrollHeight-window.innerHeight,r=Math.min(a/t*100,100);n(r);const o=j.map((e=>({id:e.id,element:document.getElementById(e.id)})));if(window.innerHeight+a>=document.documentElement.scrollHeight-10&&j.length>0){const e=j[j.length-1];e&&w(e.id)}else{let e=o.find((e=>{let{element:n}=e;if(!n)return!1;const a=n.getBoundingClientRect();return a.top<=120&&a.bottom>120}));if(!e){const n=o.filter((e=>{let{element:n}=e;return n&&n.getBoundingClientRect().top<=120})).reverse();n.length>0&&(e=n[0])}e&&w(e.id)}e=!1})),e=!0)};return window.addEventListener("scroll",a,{passive:!0}),a(),()=>window.removeEventListener("scroll",a)}),[j]),(0,C.jsxs)(i.A,{component:"main",role:"main",children:[(0,C.jsx)(s.A,{position:"fixed",sx:{background:"rgba(10, 10, 10, 0.9)",backdropFilter:"blur(10px)"},component:"nav",role:"navigation","aria-label":"Main navigation",children:(0,C.jsxs)(c.A,{children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",flexGrow:1},children:[(0,C.jsx)("img",{src:"/hearth-website/logo.png?v=".concat(Date.now()),alt:"Hearth Engine - Next-generation voxel game engine logo",style:{height:40,marginRight:12,backgroundColor:"transparent"}}),(0,C.jsx)(l.A,{variant:"h6",sx:{fontWeight:700},component:"div",children:"Hearth Engine"})]}),(0,C.jsxs)(i.A,{component:"nav",role:"navigation","aria-label":"Page navigation",children:[(0,C.jsx)(d.A,{color:"inherit",component:A.N_,to:"/",startIcon:(0,C.jsx)(t.A,{"aria-hidden":"true"}),"aria-label":"Go to home page",children:"Home"}),(0,C.jsx)(d.A,{color:"inherit",component:A.N_,to:"/downloads",startIcon:(0,C.jsx)(r.A,{"aria-hidden":"true"}),"aria-label":"Go to downloads page",children:"Downloads"}),(0,C.jsx)(g.A,{color:"inherit",href:"https://github.com/noahsabaj/hearth-engine",target:"_blank",rel:"noopener noreferrer","aria-label":"View Hearth Engine on GitHub (opens in new tab)",children:(0,C.jsx)(o.A,{})})]})]})}),(0,C.jsx)(h.A,{variant:"determinate",value:e,"aria-label":"Reading progress: ".concat(Math.round(e),"% complete"),sx:{position:"fixed",top:64,left:0,right:0,zIndex:1200,height:3,backgroundColor:"transparent","& .MuiLinearProgress-bar":{backgroundColor:"#ff4500"}}}),(0,C.jsx)(m.A,{maxWidth:"lg",sx:{mt:10},children:(0,C.jsxs)(p.Ay,{container:!0,spacing:4,children:[(0,C.jsx)(p.Ay,{item:!0,xs:12,md:3,children:(0,C.jsxs)(u.A,{component:"nav",role:"navigation","aria-label":"Documentation sections",sx:{p:2,position:"sticky",top:80},children:[(0,C.jsx)(l.A,{variant:"h6",gutterBottom:!0,component:"h2",children:"Documentation"}),(0,C.jsx)(x.A,{role:"list",children:j.map((e=>(0,C.jsx)(b.Ay,{component:"button",onClick:()=>{const n=document.getElementById(e.id);if(n){const e=80,a=n.offsetTop-e;window.scrollTo({top:a,behavior:"smooth"})}},sx:{cursor:"pointer",borderRadius:1,mb:.5,transition:"all 0.2s ease",backgroundColor:a===e.id?"rgba(255, 69, 0, 0.1)":"transparent",borderLeft:a===e.id?"3px solid #ff4500":"3px solid transparent","&:hover":{backgroundColor:a===e.id?"rgba(255, 69, 0, 0.15)":"rgba(255, 255, 255, 0.05)",transform:"translateX(4px)"}},children:(0,C.jsx)(f.A,{primary:e.title,sx:{"& .MuiListItemText-primary":{fontWeight:a===e.id?600:400,color:a===e.id?"#ff4500":"rgba(255, 255, 255, 0.9)"}}})},e.id)))})]})}),(0,C.jsx)(p.Ay,{item:!0,xs:12,md:9,children:(0,C.jsxs)(i.A,{component:"article",role:"main",id:"main-content",sx:{pb:6},children:[(0,C.jsx)(l.A,{variant:"h1",gutterBottom:!0,component:"h1",children:"Hearth Engine Documentation"}),(0,C.jsx)(l.A,{variant:"body1",color:"text.secondary",paragraph:!0,children:"Welcome to the Hearth Engine documentation. This guide will help you get started with building voxel-based games using our powerful physics engine."}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"getting-started","aria-labelledby":"getting-started-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"getting-started-heading",component:"h2",children:"Getting Started"}),(0,C.jsx)(R.A,{text:"Hearth Engine is a next-generation voxel game engine built with Rust. It provides a data-oriented, GPU-first architecture for creating games with realistic physics and emergent gameplay. Quick example use hearth_engine Engine Game World struct MyGame impl Game for MyGame fn init mut self world mut World world set_render_distance sixteen fn update mut self world mut World input Input dt f32 Game logic here fn main let mut engine Engine new engine run MyGame This demonstrates basic structure for creating game with Hearth Engine including Game trait implementation world initialization and main engine loop setup. The Engine struct provides core functionality while Game trait defines your application behavior."})]}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Hearth Engine is a next-generation voxel game engine built with Rust. It provides a data-oriented, GPU-first architecture for creating games with realistic physics and emergent gameplay."}),(0,C.jsx)(G,{children:"// Quick example\nuse hearth_engine::{Engine, Game, World};\n\nstruct MyGame;\n\nimpl Game for MyGame {\n    fn init(&mut self, world: &mut World) {\n        world.set_render_distance(16);\n    }\n    \n    fn update(&mut self, world: &mut World, input: &Input, dt: f32) {\n        // Game logic here\n    }\n}\n\nfn main() {\n    let mut engine = Engine::new();\n    engine.run(MyGame);\n}"})]}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"installation","aria-labelledby":"installation-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"installation-heading",component:"h2",children:"Installation"}),(0,C.jsx)(R.A,{text:"Installation guide for Hearth Engine. Add Hearth Engine to your project dependencies Cargo.toml dependencies hearth-engine version zero point thirty five Make sure you have Rust installed one point seventy plus. The engine requires GPU with Vulkan DirectX twelve or Metal support for hardware acceleration and graphics rendering. Cross platform compatibility across Windows macOS and Linux distributions with proper graphics drivers installed."})]}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Add Hearth Engine to your project's dependencies:"}),(0,C.jsx)(G,{language:"toml",children:'# Cargo.toml\n[dependencies]\nhearth-engine = "0.35"'}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Make sure you have Rust 1.70+ installed. The engine requires a GPU with Vulkan, DirectX 12, or Metal support."})]}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"basic-usage","aria-labelledby":"basic-usage-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"basic-usage-heading",component:"h2",children:"Basic Usage"}),(0,C.jsx)(R.A,{text:"Creating simple voxel world with Hearth Engine is straightforward. Create world with terrain generation world generate_terrain TerrainParams seed forty two scale zero point one octaves four Place voxel world set_voxel vec3 ten twenty thirty VoxelType Stone Apply physics simulation world simulate_physics dt. This covers world creation voxel placement and physics simulation basics for getting started with voxel manipulation and terrain generation in your games."})]}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Creating a simple voxel world with Hearth Engine is straightforward:"}),(0,C.jsx)(G,{children:"// Create a world with terrain generation\nworld.generate_terrain(TerrainParams {\n    seed: 42,\n    scale: 0.1,\n    octaves: 4,\n});\n\n// Place a voxel\nworld.set_voxel(vec3(10, 20, 30), VoxelType::Stone);\n\n// Apply physics simulation\nworld.simulate_physics(dt);"})]}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"core-concepts","aria-labelledby":"core-concepts-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"core-concepts-heading",component:"h2",children:"Core Concepts"}),(0,C.jsx)(R.A,{text:"Core Concepts Data Oriented Design Hearth Engine follows strict data-oriented programming principles All data lives in shared buffers and systems are stateless kernels that transform data GPU First Architecture Computations are performed on GPU whenever possible allowing for massive parallelization and scale. This architectural approach enables high performance voxel simulation with millions of blocks processed simultaneously using modern graphics hardware acceleration techniques."})]}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Data-Oriented Design"}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Hearth Engine follows strict data-oriented programming principles. All data lives in shared buffers, and systems are stateless kernels that transform data."}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"GPU-First Architecture"}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Computations are performed on the GPU whenever possible, allowing for massive parallelization and scale."})]}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"cargo-commands","aria-labelledby":"cargo-commands-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"cargo-commands-heading",component:"h2",children:"Cargo Commands Reference"}),(0,C.jsx)(R.A,{text:"Cargo is Rust build system and package manager comprehensive guide to Cargo commands you will use when developing with Hearth Engine Essential Daily Commands cargo check cargo build cargo run cargo test cargo clippy cargo fmt Build Run Commands cargo build release cargo clean cargo run bin example args Testing Debugging cargo test pattern nocapture bench cargo check clippy fmt tree audit outdated Package Management cargo add crate version features remove update search doc open Performance Analysis cargo flamegraph bloat asm watch Development workflow cargo check test run Hearth Engine Specific Workflow cargo build features vulkan debug-ui profiler. This section covers all essential Cargo commands for Rust development including building testing debugging package management performance analysis and Hearth Engine specific workflows with feature flags and optimization techniques for game development."})]}),(0,C.jsx)(l.A,{variant:"body1",paragraph:!0,children:"Cargo is Rust's build system and package manager. Here's a comprehensive guide to Cargo commands you'll use when developing with Hearth Engine."}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Essential Daily Commands"}),(0,C.jsx)(G,{language:"bash",children:"cargo check      # Quick syntax/type check (no compilation)\ncargo build      # Compile in debug mode\ncargo run        # Build and run the default binary\ncargo test       # Run all tests\ncargo clippy     # Run linter for code quality\ncargo fmt        # Auto-format code"}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Build & Run Commands"}),(0,C.jsx)(G,{language:"bash",children:"# Building\ncargo build              # Debug build (fast compile, slow runtime)\ncargo build --release    # Release build (slow compile, fast runtime)\ncargo clean              # Remove build artifacts\n\n# Running\ncargo run                      # Run default binary\ncargo run --bin <name>         # Run specific binary\ncargo run --example <name>     # Run example\ncargo run -- <args>            # Pass arguments to program\ncargo run --release            # Run optimized version"}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Testing & Debugging"}),(0,C.jsx)(G,{language:"bash",children:"# Testing\ncargo test                     # Run all tests\ncargo test <pattern>           # Run tests matching pattern\ncargo test -- --nocapture      # Show println! output\ncargo test --release           # Test in release mode\ncargo bench                    # Run benchmarks\n\n# Debugging & Inspection\ncargo check              # Fast syntax check\ncargo clippy             # Advanced linting\ncargo fmt                # Format code\ncargo tree               # Show dependency tree\ncargo audit              # Security vulnerability check\ncargo outdated           # Check for updates"}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Package Management"}),(0,C.jsx)(G,{language:"bash",children:'# Dependencies\ncargo add <crate>              # Add dependency\ncargo add <crate>@<version>    # Add specific version\ncargo add <crate> --features "feat1,feat2"\ncargo remove <crate>           # Remove dependency\ncargo update                   # Update all dependencies\ncargo search <term>            # Search crates.io\n\n# Documentation\ncargo doc                # Generate docs\ncargo doc --open         # Generate and open docs'}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Performance Analysis"}),(0,C.jsx)(G,{language:"bash",children:"# Profiling (requires additional tools)\ncargo flamegraph         # CPU profiling visualization\ncargo bloat              # Analyze binary size\ncargo asm <function>     # Show assembly code\n\n# Development workflow\ncargo watch -x check     # Auto-check on file changes\ncargo watch -x test      # Auto-test on file changes\ncargo watch -x run       # Auto-run on file changes"}),(0,C.jsx)(l.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Hearth Engine Specific Workflow"}),(0,C.jsx)(G,{language:"bash",children:'# Quick development cycle\ncargo check && cargo clippy && cargo test\n\n# Performance testing\ncargo build --release && cargo run --release\n\n# Before committing\ncargo fmt && cargo clippy && cargo test\n\n# Build with specific features\ncargo build --features "vulkan"\ncargo build --features "debug-ui,profiler"'}),(0,C.jsx)(l.A,{variant:"h5",gutterBottom:!0,sx:{mt:3},children:"Pro Tips"}),(0,C.jsxs)(x.A,{children:[(0,C.jsx)(b.Ay,{children:(0,C.jsx)(f.A,{primary:"Use cargo check frequently",secondary:"It's 10x faster than cargo build for catching errors"})}),(0,C.jsx)(b.Ay,{children:(0,C.jsx)(f.A,{primary:"Run cargo clippy before commits",secondary:"Catches common mistakes and suggests improvements"})}),(0,C.jsx)(b.Ay,{children:(0,C.jsx)(f.A,{primary:"Use --release for performance testing",secondary:"Debug builds can be 100x slower than release builds"})}),(0,C.jsx)(b.Ay,{children:(0,C.jsx)(f.A,{primary:"Install cargo-watch",secondary:"Greatly improves development experience with auto-rebuilds"})})]}),(0,C.jsxs)(l.A,{variant:"body1",paragraph:!0,sx:{mt:3},children:["For a complete reference guide with advanced commands and troubleshooting, see the"," ",(0,C.jsx)("a",{href:"https://github.com/noahsabaj/hearth-engine/blob/main/docs/guides/CARGO_COMMANDS_GUIDE.md",target:"_blank",rel:"noopener noreferrer",style:{color:"#ff4500",textDecoration:"none"},children:"full Cargo Commands Guide"})," ","in the engine documentation."]})]}),(0,C.jsx)(y.A,{sx:{my:4}}),(0,C.jsxs)(i.A,{component:"section",id:"api-reference","aria-labelledby":"api-reference-heading",sx:{mb:6},children:[(0,C.jsxs)(i.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2},children:[(0,C.jsx)(l.A,{variant:"h3",id:"api-reference-heading",component:"h2",children:"API Reference"}),(0,C.jsx)(R.A,{text:"For detailed API documentation see the docs rs page or browse the source code on GitHub repository for comprehensive function signatures type definitions and usage examples."})]}),(0,C.jsxs)(l.A,{variant:"body1",paragraph:!0,children:["For detailed API documentation, see the"," ",(0,C.jsx)("a",{href:"https://docs.rs/hearth-engine",target:"_blank",rel:"noopener noreferrer",style:{color:"#ff4500",textDecoration:"none"},children:"docs.rs page"})," ","or browse the source code on"," ",(0,C.jsx)("a",{href:"https://github.com/noahsabaj/hearth-engine",target:"_blank",rel:"noopener noreferrer",style:{color:"#ff4500",textDecoration:"none"},children:"GitHub"}),"."]})]})]})})]})})]})}},5991:(e,n,a)=>{a.d(n,{A:()=>l});var t=a(2555),r=a(4320),o=a(5277),i=a(9950),s=a(4414);const c=(0,i.memo)((e=>{let{text:n,className:a}=e;const c=(0,i.useMemo)((()=>(e=>{const n=e.trim().split(/\s+/).length,a=Math.ceil(n/200);return Math.max(1,a)})(n)),[n]);return(0,s.jsx)(o.A,(0,t.A)((0,t.A)({icon:(0,s.jsx)(r.A,{"aria-hidden":"true"}),label:"".concat(c," min read"),size:"small"},a&&{className:a}),{},{"aria-label":"Estimated reading time: ".concat(c," minute").concat(c>1?"s":""),role:"img",sx:{backgroundColor:"rgba(255, 69, 0, 0.1)",color:"#ff4500",border:"1px solid rgba(255, 69, 0, 0.2)",fontSize:"0.75rem",height:24,transition:"all 0.2s ease","& .MuiChip-icon":{color:"#ff4500",fontSize:"0.875rem"},"&:hover":{backgroundColor:"rgba(255, 69, 0, 0.15)",transform:"translateY(-1px)",boxShadow:"0 2px 8px rgba(255, 69, 0, 0.2)"},"&:focus":{outline:"2px solid #ff4500",outlineOffset:"2px"}}}))}));c.displayName="ReadingTime";const l=c}}]);