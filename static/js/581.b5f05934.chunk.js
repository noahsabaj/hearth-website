"use strict";(self.webpackChunkhearth_website=self.webpackChunkhearth_website||[]).push([[581],{2581:(e,t,n)=>{n.r(t),n.d(t,{default:()=>re});var a=n(6835),r=n(3212),i=n(4857),o=n(6589),s=n(6491),c=n(6699),l=n(9808),d=n(5333),m=n(899),p=n(2235),g=n(2053),u=n(249),h=n(4446),x=n(3563),f=n(1525),b=n(4745),y=n(9950),A=n(7566),j=n(3700),w=n(6387),v=n(3807),k=n(9379),C=n(9148),P=n(2561),S=n(172),T=n(5277),R=n(4414);const U=(0,y.memo)((e=>{let{date:t,githubEditUrl:n,className:a}=e;const r=(0,y.useMemo)((()=>"string"===typeof t?new Date(t):t),[t]),i=(0,y.useMemo)((()=>(e=>{const t=new Date,n=Math.floor((t.getTime()-e.getTime())/1e3);if(n<60)return"just now";const a=Math.floor(n/60);if(a<60)return"".concat(a," minute").concat(a>1?"s":""," ago");const r=Math.floor(a/60);if(r<24)return"".concat(r," hour").concat(r>1?"s":""," ago");const i=Math.floor(r/24);if(i<30)return"".concat(i," day").concat(i>1?"s":""," ago");const o=Math.floor(i/30);if(o<12)return"".concat(o," month").concat(o>1?"s":""," ago");const s=Math.floor(o/12);return"".concat(s," year").concat(s>1?"s":""," ago")})(r)),[r]),o=(0,y.useMemo)((()=>(e=>e.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",hour12:!0}).replace(","," at"))(r)),[r]),c="Last updated ".concat(i,", on ").concat(o);return(0,R.jsxs)(s.A,{sx:(0,k.A)({display:"inline-flex",alignItems:"center",gap:.5},a&&{className:a}),children:[(0,R.jsx)(S.A,{title:o,arrow:!0,placement:"top",children:(0,R.jsx)(T.A,{icon:(0,R.jsx)(C.A,{"aria-hidden":"true"}),label:"Updated ".concat(i),size:"small","aria-label":c,sx:{backgroundColor:"rgba(100, 100, 100, 0.1)",color:"rgba(255, 255, 255, 0.7)",border:"1px solid rgba(255, 255, 255, 0.1)",fontSize:"0.7rem",height:22,transition:"all 0.2s ease",cursor:"help","& .MuiChip-icon":{color:"rgba(255, 255, 255, 0.6)",fontSize:"0.8rem"},"&:hover":{backgroundColor:"rgba(100, 100, 100, 0.15)",color:"rgba(255, 255, 255, 0.85)",borderColor:"rgba(255, 255, 255, 0.2)","& .MuiChip-icon":{color:"rgba(255, 255, 255, 0.8)"}},"&:focus":{outline:"2px solid rgba(255, 255, 255, 0.5)",outlineOffset:"2px"},"@media (max-width: 600px)":{fontSize:"0.65rem",height:20,"& .MuiChip-icon":{fontSize:"0.75rem"}}}})}),n&&(0,R.jsx)(S.A,{title:"View edit history on GitHub",arrow:!0,placement:"top",children:(0,R.jsx)(d.A,{href:n,target:"_blank",rel:"noopener noreferrer","aria-label":"View edit history on GitHub (opens in new tab)",size:"small",sx:{padding:.5,color:"rgba(255, 255, 255, 0.6)",transition:"all 0.2s ease","&:hover":{color:"#ff4500",backgroundColor:"rgba(255, 69, 0, 0.1)",transform:"scale(1.1)"},"&:focus":{outline:"2px solid rgba(255, 255, 255, 0.5)",outlineOffset:"2px"},"@media (max-width: 600px)":{padding:.25,"& .MuiSvgIcon-root":{fontSize:"1rem"}}},children:(0,R.jsx)(P.A,{fontSize:"small"})})})]})}));U.displayName="LastUpdated";const G=U;var I=n(3352),D=n(5991),_=n(1113),E=n(4578),B=n(8089),z=n(704);const M={"getting-started":[{id:"installation",title:"Installation",description:"Learn how to set up Hearth Engine in your Rust project with dependencies and system requirements.",readingTime:"2 min read",tags:["Setup","Dependencies"]},{id:"basic-usage",title:"Basic Usage",description:"Create your first voxel world with terrain generation and physics simulation.",readingTime:"3 min read",tags:["Tutorial","Code"]},{id:"core-concepts",title:"Core Concepts",description:"Understand data-oriented design and GPU-first architecture principles.",readingTime:"4 min read",tags:["Architecture","Theory"]}],installation:[{id:"basic-usage",title:"Basic Usage",description:"Now that you have Hearth Engine installed, create your first voxel world.",readingTime:"3 min read",tags:["Tutorial","Next Steps"]},{id:"cargo-commands",title:"Cargo Commands",description:"Master essential Cargo commands for building and running your Hearth Engine project.",readingTime:"8 min read",tags:["Tools","Reference"]},{id:"getting-started",title:"Getting Started",description:"Review the quick example and basic structure of a Hearth Engine game.",readingTime:"5 min read",tags:["Overview","Examples"]}],"basic-usage":[{id:"core-concepts",title:"Core Concepts",description:"Dive deeper into the architecture and design principles behind Hearth Engine.",readingTime:"4 min read",tags:["Architecture","Advanced"]},{id:"api-reference",title:"API Reference",description:"Explore the complete API documentation for advanced features and customization.",readingTime:"2 min read",tags:["Reference","Documentation"]},{id:"cargo-commands",title:"Cargo Commands",description:"Learn helpful commands for testing, debugging, and optimizing your game.",readingTime:"8 min read",tags:["Tools","Development"]}],"core-concepts":[{id:"basic-usage",title:"Basic Usage",description:"See these concepts in action with practical code examples.",readingTime:"3 min read",tags:["Examples","Practice"]},{id:"api-reference",title:"API Reference",description:"Explore the full API that implements these core architectural patterns.",readingTime:"2 min read",tags:["Reference","Deep Dive"]},{id:"cargo-commands",title:"Performance Commands",description:"Use profiling and optimization commands to leverage GPU-first architecture.",readingTime:"8 min read",tags:["Performance","Tools"]}],"cargo-commands":[{id:"basic-usage",title:"Basic Usage",description:"Apply these commands to build and run your first Hearth Engine project.",readingTime:"3 min read",tags:["Practice","Examples"]},{id:"installation",title:"Installation",description:"Review project setup and dependency management with Cargo.",readingTime:"2 min read",tags:["Setup","Dependencies"]},{id:"api-reference",title:"API Reference",description:"Generate and explore API documentation with cargo doc commands.",readingTime:"2 min read",tags:["Documentation","Reference"]}],"api-reference":[{id:"basic-usage",title:"Basic Usage",description:"See practical examples of the API in action with simple voxel operations.",readingTime:"3 min read",tags:["Examples","Tutorial"]},{id:"core-concepts",title:"Core Concepts",description:"Understand the architectural principles that shape the API design.",readingTime:"4 min read",tags:["Architecture","Design"]},{id:"cargo-commands",title:"Documentation Commands",description:"Generate local API docs and explore crate documentation with Cargo.",readingTime:"8 min read",tags:["Tools","Documentation"]}]},H=e=>{let{currentSection:t,onNavigate:n}=e;const a=M[t]||[];return 0===a.length?null:(0,R.jsxs)(s.A,{sx:{mt:6,mb:4},children:[(0,R.jsx)(g.A,{variant:"h4",component:"h3",gutterBottom:!0,sx:{mb:3,fontWeight:600},children:"Related Topics"}),(0,R.jsx)(m.Ay,{container:!0,spacing:3,children:a.map((e=>(0,R.jsx)(m.Ay,{item:!0,xs:12,md:4,children:(0,R.jsx)(B.A,{sx:{height:"100%",cursor:"pointer",transition:"all 0.3s ease",backgroundColor:"rgba(255, 255, 255, 0.05)",border:"1px solid rgba(255, 255, 255, 0.1)","&:hover":{transform:"translateY(-4px)",backgroundColor:"rgba(255, 255, 255, 0.08)",borderColor:"#ff4500",boxShadow:"0 8px 24px rgba(255, 69, 0, 0.2)","& .arrow-icon":{transform:"translateX(4px)"}}},onClick:()=>n(e.id),children:(0,R.jsxs)(z.A,{sx:{height:"100%",display:"flex",flexDirection:"column"},children:[(0,R.jsxs)(s.A,{sx:{flexGrow:1},children:[(0,R.jsxs)(g.A,{variant:"h6",component:"h4",gutterBottom:!0,sx:{fontWeight:600,color:"#ff4500",display:"flex",alignItems:"center",justifyContent:"space-between"},children:[e.title,(0,R.jsx)(_.A,{className:"arrow-icon",sx:{fontSize:20,transition:"transform 0.2s ease"}})]}),(0,R.jsx)(g.A,{variant:"body2",color:"text.secondary",paragraph:!0,sx:{mb:2},children:e.description})]}),(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",justifyContent:"space-between",mt:"auto"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:.5},children:[(0,R.jsx)(E.A,{sx:{fontSize:16,color:"text.secondary"}}),(0,R.jsx)(g.A,{variant:"caption",color:"text.secondary",children:e.readingTime})]}),e.tags&&(0,R.jsx)(s.A,{sx:{display:"flex",gap:.5},children:e.tags.slice(0,2).map((e=>(0,R.jsx)(T.A,{label:e,size:"small",sx:{height:20,fontSize:"0.7rem",backgroundColor:"rgba(255, 69, 0, 0.1)",color:"#ff4500",border:"1px solid rgba(255, 69, 0, 0.3)"}},e)))})]})]})})},e.id)))})]})};var O=n(8199),W=n(7270),N=n(4954);const F={gettingStarted:new Date("2025-06-18T10:30:00"),installation:new Date("2025-06-18T14:45:00"),basicUsage:new Date("2025-06-18T09:15:00"),coreConcepts:new Date("2025-06-18T16:20:00"),architecture:new Date("2025-06-18T11:00:00"),cargoCommands:new Date("2025-01-16T11:00:00"),apiReference:new Date("2025-06-18T13:30:00")},L="https://github.com/noahsabaj/hearth-engine/commits/main/docs/getting-started.md",$="https://github.com/noahsabaj/hearth-engine/commits/main/docs/installation.md",V="https://github.com/noahsabaj/hearth-engine/commits/main/docs/basic-usage.md",q="https://github.com/noahsabaj/hearth-engine/commits/main/docs/core-concepts.md",Y="https://github.com/noahsabaj/hearth-engine/commits/main/docs/architecture/GPU_DRIVEN_ARCHITECTURE.md",J="https://github.com/noahsabaj/hearth-engine/commits/main/docs/guides/CARGO_COMMANDS_GUIDE.md",Q="https://github.com/noahsabaj/hearth-engine/commits/main/docs/api-reference.md",Z="Hearth Engine is a next-generation voxel game engine built with Rust. It provides a data-oriented, GPU-first architecture for creating games with realistic physics and emergent gameplay.\n\nKey Features:\n- GPU-driven architecture with 60+ FPS at millions of voxels\n- Zero manual GPU operations through 8-phase automation system\n- Data-Oriented Programming (DOP) - no classes or OOP\n- 1dcm\xb3 voxels (10cm cubes) for realistic physics\n- Full per-voxel physics simulation (thermal, fluid, acoustic, structural)\n- Unified world system with GPU-first computation\n\n// Quick example - Data-Oriented Style\nuse hearth_engine::{Engine, Game, World};\n\nstruct MyGame {\n    // Data only - no methods!\n    player_data: PlayerData,\n    world_buffer: WorldBuffer,\n}\n\nimpl Game for MyGame {\n    fn init(&mut self, world: &mut World) {\n        world.set_render_distance(16);\n        // Initialize data buffers\n    }\n    \n    fn update(&mut self, world: &mut World, input: &Input, dt: f32) {\n        // Transform data through stateless functions\n        update_player_position(&mut self.player_data, input, dt);\n        simulate_physics(&mut self.world_buffer, dt);\n    }\n}\n\nfn main() {\n    let mut engine = Engine::new();\n    engine.run(MyGame);\n}\n\nThis demonstrates the data-oriented approach - structs contain only data, and functions transform that data. No methods, no self references in game logic.",K='Add Hearth Engine to your project\'s dependencies:\n\n# Cargo.toml\n[dependencies]\nhearth-engine = { git = "https://github.com/noahsabaj/hearth-engine" }\n\n# Or use a specific branch/tag\nhearth-engine = { git = "https://github.com/noahsabaj/hearth-engine", branch = "main" }\n\nRequirements:\n- Rust 1.70+ (latest stable recommended)\n- GPU with Vulkan, DirectX 12, or Metal support\n- 8GB+ RAM for development\n- Windows, macOS, or Linux\n\nFor development, clone the repository:\ngit clone https://github.com/noahsabaj/hearth-engine\ncd hearth-engine\ncargo run --example engine_testbed',X="Creating a voxel world follows data-oriented principles:\n\n// Initialize world buffers\nlet mut world_buffer = WorldBuffer::new();\nlet mut render_buffer = RenderBuffer::new();\n\n// Generate terrain using stateless functions\ngenerate_terrain(&mut world_buffer, TerrainParams {\n    seed: 42,\n    scale: 0.1,\n    octaves: 4,\n});\n\n// Transform voxel data\nset_voxel(&mut world_buffer, vec3(10, 20, 30), VoxelType::Stone);\n\n// Run physics kernel on GPU\nlet physics_kernel = PhysicsKernel::new();\nphysics_kernel.execute(&mut world_buffer, dt);\n\n// Sync to render buffer\nsync_render_data(&world_buffer, &mut render_buffer);",ee="Data-Oriented Design (DOP)\n\nHearth Engine follows STRICT data-oriented programming principles:\n- \u274c NO classes, objects, or OOP patterns  \n- \u274c NO methods - only functions that transform data\n- \u2705 Data lives in shared buffers (WorldBuffer, RenderBuffer, etc.)\n- \u2705 Systems are stateless kernels that read/write buffers\n- \u2705 GPU-first architecture - data lives where it's processed\n- \u2705 If you're writing self.method(), you're doing it wrong\n\nGPU-First Architecture\n\nEverything runs on GPU when possible:\n- Unified GPU Type System - Rust types as single source of truth\n- 8-Phase GPU Automation eliminates ALL manual GPU operations\n- Automatic WGSL generation from Rust types\n- Structure of Arrays (SOA) memory layout\n- Zero-copy GPU pipeline creation\n- Type-safe bind groups with compile-time validation\n\nPhysics-First World\n\nEvery voxel is 1dcm\xb3 (10cm cube) with full physics:\n- Thermal dynamics - heat spreads, materials melt\n- Fluid dynamics - water flows, pressure matters\n- Acoustic simulation - sound propagates realistically\n- Structural integrity - buildings can collapse\n- Material properties - density, conductivity, elasticity\n\nUnified World System\n\nGPU-driven world management:\n- Single world_unified module (no CPU/GPU split)\n- GPU kernels for all operations\n- CPU fallbacks only when necessary\n- Automatic memory synchronization\n- Lock-free concurrent access",te='Cargo is Rust\'s build system and package manager. Here\'s a comprehensive guide to Cargo commands you\'ll use when developing with Hearth Engine.\n\nEssential Daily Commands\n\ncargo check      # Quick syntax/type check (no compilation)\ncargo build      # Compile in debug mode\ncargo run        # Build and run the default binary\ncargo test       # Run all tests\ncargo clippy     # Run linter for code quality\ncargo fmt        # Auto-format code\n\nBuild & Run Commands\n\n# Building\ncargo build              # Debug build (fast compile, slow runtime)\ncargo build --release    # Release build (slow compile, fast runtime)\ncargo clean              # Remove build artifacts\n\n# Running\ncargo run                      # Run default binary\ncargo run --bin <name>         # Run specific binary\ncargo run --example <name>     # Run example\ncargo run -- <args>            # Pass arguments to program\ncargo run --release            # Run optimized version\n\nTesting & Debugging\n\n# Testing\ncargo test                     # Run all tests\ncargo test <pattern>           # Run tests matching pattern\ncargo test -- --nocapture      # Show println! output\ncargo test --release           # Test in release mode\ncargo bench                    # Run benchmarks\n\n# Debugging & Inspection\ncargo check              # Fast syntax check\ncargo clippy             # Advanced linting\ncargo fmt                # Format code\ncargo tree               # Show dependency tree\ncargo audit              # Security vulnerability check\ncargo outdated           # Check for updates\n\nPackage Management\n\n# Dependencies\ncargo add <crate>              # Add dependency\ncargo add <crate>@<version>    # Add specific version\ncargo add <crate> --features "feat1,feat2"\ncargo remove <crate>           # Remove dependency\ncargo update                   # Update all dependencies\ncargo search <term>            # Search crates.io\n\n# Documentation\ncargo doc                # Generate docs\ncargo doc --open         # Generate and open docs\n\nPerformance Analysis\n\n# Profiling (requires additional tools)\ncargo flamegraph         # CPU profiling visualization\ncargo bloat              # Analyze binary size\ncargo asm <function>     # Show assembly code\n\n# Development workflow\ncargo watch -x check     # Auto-check on file changes\ncargo watch -x test      # Auto-test on file changes\ncargo watch -x run       # Auto-run on file changes\n\nHearth Engine Specific Workflow\n\n# Quick development cycle\ncargo check && cargo clippy && cargo test\n\n# Performance testing\ncargo build --release && cargo run --release\n\n# Before committing\ncargo fmt && cargo clippy && cargo test\n\n# Build with specific features\ncargo build --features "vulkan"\ncargo build --features "debug-ui,profiler"\n\nPro Tips\n\nUse cargo check frequently - It\'s 10x faster than cargo build for catching errors\nRun cargo clippy before commits - Catches common mistakes and suggests improvements\nUse --release for performance testing - Debug builds can be 100x slower than release builds\nInstall cargo-watch - Greatly improves development experience with auto-rebuilds\n\nFor a complete reference guide with advanced commands and troubleshooting, see the full Cargo Commands Guide in the engine documentation.',ne="GPU-Driven Architecture\n\nHearth Engine is built from the ground up for GPU-first computation:\n\n8-Phase GPU Automation System\n\nPhase 1: Type Registration\n- Rust types automatically registered with GPU system\n- Zero manual struct definitions in WGSL\n\nPhase 2: Layout Analysis\n- Automatic memory layout calculation\n- Padding and alignment handled by encase\n\nPhase 3: WGSL Generation\n- Automatic shader code generation from Rust types\n- Type-safe bindings with no manual writing\n\nPhase 4: Buffer Management\n- Automatic buffer creation and updates\n- Smart caching and reuse\n\nPhase 5: Pipeline Creation\n- Zero-code pipeline setup\n- Automatic bind group layouts\n\nPhase 6: Bind Group Management\n- Type-safe resource binding\n- Compile-time validation\n\nPhase 7: Dispatch Orchestration\n- Automatic workgroup sizing\n- Dependency tracking\n\nPhase 8: Validation\n- Runtime type checking\n- Memory safety guarantees\n\nModule Structure\n\nsrc/\n\u251c\u2500\u2500 gpu/\n\u2502   \u251c\u2500\u2500 automation/      # 8-phase GPU automation\n\u2502   \u251c\u2500\u2500 soa/            # Structure of Arrays types\n\u2502   \u2514\u2500\u2500 kernels/        # GPU compute shaders\n\u251c\u2500\u2500 world_unified/      # Unified world system\n\u2502   \u251c\u2500\u2500 core/          # Core data structures\n\u2502   \u251c\u2500\u2500 storage/       # GPU storage management\n\u2502   \u251c\u2500\u2500 generation/    # World generation kernels\n\u2502   \u251c\u2500\u2500 compute/       # Physics & simulation\n\u2502   \u2514\u2500\u2500 interfaces/    # CPU/GPU sync\n\u2514\u2500\u2500 render/            # Rendering pipeline\n\nPerformance Architecture\n\n- Lock-free concurrent access patterns\n- Zero-copy GPU memory transfers\n- Structure of Arrays (SOA) for cache efficiency\n- Batch operations minimize GPU dispatch overhead\n- Unified memory model reduces synchronization\n\nThe architecture prioritizes GPU residence - data lives where it&apos;s processed, eliminating costly CPU-GPU transfers.",ae="For detailed API documentation, see the docs.rs page or browse the source code on GitHub.",re=()=>{const e=(0,i.A)(),t=(0,o.A)(e.breakpoints.down("md")),[n,k]=(0,y.useState)(0),[C,P]=(0,y.useState)("getting-started"),[S,T]=(0,y.useState)(!t),{setSidebarToggleCallback:U,setNavigationCallbacks:_,showToast:E}=(0,N.r)(),B=(0,y.useCallback)((e=>{const t=document.getElementById(e);if(t){const e=80,n=t.offsetTop-e;window.scrollTo({top:n,behavior:"smooth"})}}),[]),z=(0,y.useMemo)((()=>[{title:"Getting Started",id:"getting-started"},{title:"Installation",id:"installation"},{title:"Basic Usage",id:"basic-usage"},{title:"Core Concepts",id:"core-concepts"},{title:"Architecture",id:"architecture"},{title:"Cargo Commands",id:"cargo-commands"},{title:"API Reference",id:"api-reference"}]),[]);return(0,y.useEffect)((()=>{U((()=>{T((e=>!e))}));_((()=>{const e=z.findIndex((e=>e.id===C));if(e>0){const[t]=[z[e-1]];t&&(B(t.id),P(t.id),E("Navigated to ".concat(t.title)))}}),(()=>{const e=z.findIndex((e=>e.id===C));if(e<z.length-1){const[t]=[z[e+1]];t&&(B(t.id),P(t.id),E("Navigated to ".concat(t.title)))}}))}),[U,_,z,C,B,E]),(0,y.useEffect)((()=>{let e=!1;const t=()=>{e||(requestAnimationFrame((()=>{const t=window.pageYOffset,n=document.documentElement.scrollHeight-window.innerHeight,a=Math.min(t/n*100,100);k(a);const r=z.map((e=>({id:e.id,element:document.getElementById(e.id)})));if(window.innerHeight+t>=document.documentElement.scrollHeight-10&&z.length>0){const e=z[z.length-1];e&&P(e.id)}else{let e=r.find((e=>{let{element:t}=e;if(!t)return!1;const n=t.getBoundingClientRect();return n.top<=120&&n.bottom>120}));if(!e){const t=r.filter((e=>{let{element:t}=e;return t&&t.getBoundingClientRect().top<=120})).reverse();t.length>0&&([e]=t)}e&&P(e.id)}e=!1})),e=!0)};return window.addEventListener("scroll",t,{passive:!0}),t(),()=>window.removeEventListener("scroll",t)}),[z]),(0,R.jsxs)(s.A,{component:"main",role:"main",children:[(0,R.jsx)(O.A,{title:"Documentation",description:"Comprehensive documentation for Hearth Engine. Learn how to install, configure, and use Hearth Engine to build amazing games.",keywords:"hearth engine documentation, game engine docs, hearth tutorial, game development guide, hearth API reference",pathname:"/documentation"}),(0,R.jsx)(I.A,{variant:"docs"}),(0,R.jsx)(c.A,{variant:"determinate",value:n,"aria-label":"Reading progress: ".concat(Math.round(n),"% complete"),sx:{position:"fixed",top:64,left:0,right:0,zIndex:1200,height:3,backgroundColor:"transparent","& .MuiLinearProgress-bar":{backgroundColor:W.lm.primary.main}}}),(0,R.jsxs)(l.A,{maxWidth:"lg",sx:{mt:10},children:[t&&(0,R.jsx)(d.A,{onClick:()=>T(!S),sx:{position:"fixed",left:16,top:80,zIndex:1201,backgroundColor:e.palette.background.paper,boxShadow:2,"&:hover":{backgroundColor:e.palette.background.paper}},"aria-label":"Toggle documentation sidebar",children:S?(0,R.jsx)(a.A,{}):(0,R.jsx)(r.A,{})}),(0,R.jsxs)(m.Ay,{container:!0,spacing:4,children:[(0,R.jsx)(m.Ay,{item:!0,xs:12,md:3,sx:{display:{xs:"none",md:"block"}},children:(0,R.jsxs)(p.A,{component:"nav",role:"navigation","aria-label":"Documentation sections",sx:{p:2,position:"sticky",top:80},children:[(0,R.jsx)(g.A,{variant:"h6",gutterBottom:!0,component:"h2",children:"Documentation"}),(0,R.jsx)(u.A,{role:"list",children:z.map((e=>(0,R.jsx)(h.Ay,{component:"button",onClick:()=>{const t=document.getElementById(e.id);if(t){const e=80,n=t.offsetTop-e;window.scrollTo({top:n,behavior:"smooth"})}},sx:{cursor:"pointer",borderRadius:1,mb:.5,transition:"all 0.2s ease",position:"relative",backgroundColor:C===e.id?"".concat(W.lm.primary.main,"1A"):W.lm.utils.transparent,border:"1px solid ".concat(W.lm.utils.shimmerLight),borderLeft:C===e.id?"3px solid ".concat(W.lm.primary.main):"1px solid ".concat(W.lm.utils.shimmerLight),"&:hover":{backgroundColor:C===e.id?"".concat(W.lm.primary.main,"26"):W.lm.utils.shimmer,borderColor:"".concat(W.lm.text.primary,"1F"),borderLeftColor:C===e.id?W.lm.primary.main:"".concat(W.lm.text.primary,"1F")}},children:(0,R.jsx)(x.A,{primary:e.title,sx:{"& .MuiListItemText-primary":{fontWeight:C===e.id?600:400,color:C===e.id?W.lm.primary.main:W.lm.text.secondary}}})},e.id)))})]})}),(0,R.jsx)(f.Ay,{anchor:"left",open:t&&S,onClose:()=>T(!1),sx:{display:{xs:"block",md:"none"},"& .MuiDrawer-paper":{width:280,backgroundColor:e.palette.background.paper,top:64}},children:(0,R.jsxs)(s.A,{sx:{p:2},children:[(0,R.jsx)(g.A,{variant:"h6",gutterBottom:!0,component:"h2",children:"Documentation"}),(0,R.jsx)(u.A,{role:"list",children:z.map((e=>(0,R.jsx)(h.Ay,{component:"button",onClick:()=>{B(e.id),T(!1)},sx:{cursor:"pointer",borderRadius:1,mb:.5,transition:"all 0.2s ease",position:"relative",backgroundColor:C===e.id?"".concat(W.lm.primary.main,"1A"):W.lm.utils.transparent,border:"1px solid ".concat(W.lm.utils.shimmerLight),borderLeft:C===e.id?"3px solid ".concat(W.lm.primary.main):"1px solid ".concat(W.lm.utils.shimmerLight),"&:hover":{backgroundColor:C===e.id?"".concat(W.lm.primary.main,"26"):W.lm.utils.shimmer,borderColor:"".concat(W.lm.text.primary,"1F"),borderLeftColor:C===e.id?W.lm.primary.main:"".concat(W.lm.text.primary,"1F")}},children:(0,R.jsx)(x.A,{primary:e.title,sx:{"& .MuiListItemText-primary":{fontWeight:C===e.id?600:400,color:C===e.id?W.lm.primary.main:W.lm.text.secondary}}})},e.id)))})]})}),(0,R.jsx)(m.Ay,{item:!0,xs:12,md:9,children:(0,R.jsxs)(s.A,{component:"article",role:"main",id:"main-content",sx:{pb:6},children:[(0,R.jsx)(g.A,{variant:"h1",gutterBottom:!0,component:"h1",children:"Hearth Engine Documentation"}),(0,R.jsx)(g.A,{variant:"body1",color:"text.secondary",paragraph:!0,children:"Welcome to the Hearth Engine documentation. This guide will help you get started with building voxel-based games using our powerful physics engine."}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"getting-started","aria-labelledby":"getting-started-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"getting-started-heading",component:"h2",children:"Getting Started"}),(0,R.jsx)(D.A,{text:Z}),(0,R.jsx)(G,{date:F.gettingStarted,githubEditUrl:L}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Hearth Engine is a next-generation voxel game engine built with Rust. It provides a data-oriented, GPU-first architecture for creating games with realistic physics and emergent gameplay."}),(0,R.jsx)(A.A,{children:"// Quick example\nuse hearth_engine::{Engine, Game, World};\n\nstruct MyGame;\n\nimpl Game for MyGame {\n    fn init(&mut self, world: &mut World) {\n        world.set_render_distance(16);\n    }\n    \n    fn update(&mut self, world: &mut World, input: &Input, dt: f32) {\n        // Game logic here\n    }\n}\n\nfn main() {\n    let mut engine = Engine::new();\n    engine.run(MyGame);\n}"}),(0,R.jsx)(H,{currentSection:"getting-started",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"getting-started",sectionTitle:"Getting Started"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"installation","aria-labelledby":"installation-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"installation-heading",component:"h2",children:"Installation"}),(0,R.jsx)(D.A,{text:K}),(0,R.jsx)(G,{date:F.installation,githubEditUrl:$}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Add Hearth Engine to your project's dependencies:"}),(0,R.jsx)(A.A,{language:"toml",children:'# Cargo.toml\n[dependencies]\nhearth-engine = { git = "https://github.com/noahsabaj/hearth-engine" }\n\n# Or use a specific branch/tag\nhearth-engine = { git = "https://github.com/noahsabaj/hearth-engine", branch = "main" }'}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Requirements: Rust 1.70+, GPU with Vulkan/DirectX 12/Metal, 8GB+ RAM"}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"For development, clone the repository:"}),(0,R.jsx)(A.A,{language:"bash",children:"git clone https://github.com/noahsabaj/hearth-engine\ncd hearth-engine\ncargo run --example engine_testbed"}),(0,R.jsx)(H,{currentSection:"installation",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"installation",sectionTitle:"Installation"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"basic-usage","aria-labelledby":"basic-usage-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"basic-usage-heading",component:"h2",children:"Basic Usage"}),(0,R.jsx)(D.A,{text:X}),(0,R.jsx)(G,{date:F.basicUsage,githubEditUrl:V}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Creating a voxel world follows data-oriented principles:"}),(0,R.jsx)(A.A,{children:"// Initialize world buffers\nlet mut world_buffer = WorldBuffer::new();\nlet mut render_buffer = RenderBuffer::new();\n\n// Generate terrain using stateless functions\ngenerate_terrain(&mut world_buffer, TerrainParams {\n    seed: 42,\n    scale: 0.1,\n    octaves: 4,\n});\n\n// Transform voxel data\nset_voxel(&mut world_buffer, vec3(10, 20, 30), VoxelType::Stone);\n\n// Run physics kernel on GPU\nlet physics_kernel = PhysicsKernel::new();\nphysics_kernel.execute(&mut world_buffer, dt);\n\n// Sync to render buffer\nsync_render_data(&world_buffer, &mut render_buffer);"}),(0,R.jsx)(H,{currentSection:"basic-usage",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"basic-usage",sectionTitle:"Basic Usage"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"core-concepts","aria-labelledby":"core-concepts-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"core-concepts-heading",component:"h2",children:"Core Concepts"}),(0,R.jsx)(D.A,{text:ee}),(0,R.jsx)(G,{date:F.coreConcepts,githubEditUrl:q}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Data-Oriented Design (DOP)"}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Hearth Engine follows STRICT data-oriented programming principles:"}),(0,R.jsxs)(u.A,{children:[(0,R.jsx)(h.Ay,{children:"\u274c NO classes, objects, or OOP patterns"}),(0,R.jsx)(h.Ay,{children:"\u274c NO methods - only functions that transform data"}),(0,R.jsx)(h.Ay,{children:"\u2705 Data lives in shared buffers (WorldBuffer, RenderBuffer, etc.)"}),(0,R.jsx)(h.Ay,{children:"\u2705 Systems are stateless kernels that read/write buffers"}),(0,R.jsx)(h.Ay,{children:"\u2705 GPU-first architecture - data lives where it's processed"})]}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"GPU-First Architecture"}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Everything runs on GPU when possible with automatic WGSL generation, Structure of Arrays (SOA) memory layout, and zero-copy pipeline creation."}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Physics-First World"}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Every voxel is 1dcm\xb3 (10cm cube) with full physics simulation including thermal dynamics, fluid dynamics, acoustic simulation, and structural integrity."}),(0,R.jsx)(H,{currentSection:"core-concepts",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"core-concepts",sectionTitle:"Core Concepts"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"architecture","aria-labelledby":"architecture-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"architecture-heading",component:"h2",children:"Architecture"}),(0,R.jsx)(D.A,{text:ne}),(0,R.jsx)(G,{date:F.architecture,githubEditUrl:Y}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Hearth Engine is built from the ground up for GPU-first computation with an innovative 8-phase automation system."}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"8-Phase GPU Automation System"}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"The engine eliminates all manual GPU operations through a sophisticated automation pipeline:"}),(0,R.jsxs)(u.A,{children:[(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 1: Type Registration",secondary:"Rust types automatically registered with GPU system"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 2: Layout Analysis",secondary:"Automatic memory layout calculation with encase"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 3: WGSL Generation",secondary:"Automatic shader code generation from Rust types"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 4: Buffer Management",secondary:"Automatic buffer creation and updates"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 5: Pipeline Creation",secondary:"Zero-code pipeline setup"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 6: Bind Group Management",secondary:"Type-safe resource binding"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 7: Dispatch Orchestration",secondary:"Automatic workgroup sizing"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Phase 8: Validation",secondary:"Runtime type checking and memory safety"})})]}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Module Structure"}),(0,R.jsx)(A.A,{language:"bash",children:"src/\n\u251c\u2500\u2500 gpu/\n\u2502   \u251c\u2500\u2500 automation/      # 8-phase GPU automation\n\u2502   \u251c\u2500\u2500 soa/            # Structure of Arrays types\n\u2502   \u2514\u2500\u2500 kernels/        # GPU compute shaders\n\u251c\u2500\u2500 world_unified/      # Unified world system\n\u2502   \u251c\u2500\u2500 core/          # Core data structures\n\u2502   \u251c\u2500\u2500 storage/       # GPU storage management\n\u2502   \u251c\u2500\u2500 generation/    # World generation kernels\n\u2502   \u251c\u2500\u2500 compute/       # Physics & simulation\n\u2502   \u2514\u2500\u2500 interfaces/    # CPU/GPU sync\n\u2514\u2500\u2500 render/            # Rendering pipeline"}),(0,R.jsx)(H,{currentSection:"architecture",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"architecture",sectionTitle:"Architecture"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"cargo-commands","aria-labelledby":"cargo-commands-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"cargo-commands-heading",component:"h2",children:"Cargo Commands Reference"}),(0,R.jsx)(D.A,{text:te}),(0,R.jsx)(G,{date:F.cargoCommands,githubEditUrl:J}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsx)(g.A,{variant:"body1",paragraph:!0,children:"Cargo is Rust's build system and package manager. Here's a comprehensive guide to Cargo commands you'll use when developing with Hearth Engine."}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Essential Daily Commands"}),(0,R.jsx)(A.A,{language:"bash",children:"cargo check      # Quick syntax/type check (no compilation)\ncargo build      # Compile in debug mode\ncargo run        # Build and run the default binary\ncargo test       # Run all tests\ncargo clippy     # Run linter for code quality\ncargo fmt        # Auto-format code"}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Build & Run Commands"}),(0,R.jsx)(A.A,{language:"bash",children:"# Building\ncargo build              # Debug build (fast compile, slow runtime)\ncargo build --release    # Release build (slow compile, fast runtime)\ncargo clean              # Remove build artifacts\n\n# Running\ncargo run                      # Run default binary\ncargo run --bin <name>         # Run specific binary\ncargo run --example <name>     # Run example\ncargo run -- <args>            # Pass arguments to program\ncargo run --release            # Run optimized version"}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Testing & Debugging"}),(0,R.jsx)(A.A,{language:"bash",children:"# Testing\ncargo test                     # Run all tests\ncargo test <pattern>           # Run tests matching pattern\ncargo test -- --nocapture      # Show println! output\ncargo test --release           # Test in release mode\ncargo bench                    # Run benchmarks\n\n# Debugging & Inspection\ncargo check              # Fast syntax check\ncargo clippy             # Advanced linting\ncargo fmt                # Format code\ncargo tree               # Show dependency tree\ncargo audit              # Security vulnerability check\ncargo outdated           # Check for updates"}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Package Management"}),(0,R.jsx)(A.A,{language:"bash",children:'# Dependencies\ncargo add <crate>              # Add dependency\ncargo add <crate>@<version>    # Add specific version\ncargo add <crate> --features "feat1,feat2"\ncargo remove <crate>           # Remove dependency\ncargo update                   # Update all dependencies\ncargo search <term>            # Search crates.io\n\n# Documentation\ncargo doc                # Generate docs\ncargo doc --open         # Generate and open docs'}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Performance Analysis"}),(0,R.jsx)(A.A,{language:"bash",children:"# Profiling (requires additional tools)\ncargo flamegraph         # CPU profiling visualization\ncargo bloat              # Analyze binary size\ncargo asm <function>     # Show assembly code\n\n# Development workflow\ncargo watch -x check     # Auto-check on file changes\ncargo watch -x test      # Auto-test on file changes\ncargo watch -x run       # Auto-run on file changes"}),(0,R.jsx)(g.A,{variant:"h4",gutterBottom:!0,sx:{mt:3},children:"Hearth Engine Specific Workflow"}),(0,R.jsx)(A.A,{language:"bash",children:'# Quick development cycle\ncargo check && cargo clippy && cargo test\n\n# Performance testing\ncargo build --release && cargo run --release\n\n# Before committing\ncargo fmt && cargo clippy && cargo test\n\n# Build with specific features\ncargo build --features "vulkan"\ncargo build --features "debug-ui,profiler"'}),(0,R.jsx)(g.A,{variant:"h5",gutterBottom:!0,sx:{mt:3},children:"Pro Tips"}),(0,R.jsxs)(u.A,{children:[(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Use cargo check frequently",secondary:"It's 10x faster than cargo build for catching errors"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Run cargo clippy before commits",secondary:"Catches common mistakes and suggests improvements"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Use --release for performance testing",secondary:"Debug builds can be 100x slower than release builds"})}),(0,R.jsx)(h.Ay,{children:(0,R.jsx)(x.A,{primary:"Install cargo-watch",secondary:"Greatly improves development experience with auto-rebuilds"})})]}),(0,R.jsxs)(g.A,{variant:"body1",paragraph:!0,sx:{mt:3},children:["For a complete reference guide with advanced commands and troubleshooting, see the"," ",(0,R.jsx)("a",{href:"".concat(W.R4.github.repoUrl,"/blob/main/docs/guides/CARGO_COMMANDS_GUIDE.md"),target:"_blank",rel:"noopener noreferrer",style:{color:W.lm.primary.main,textDecoration:"none"},children:"full Cargo Commands Guide"})," ","in the engine documentation."]}),(0,R.jsx)(H,{currentSection:"cargo-commands",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"cargo-commands",sectionTitle:"Cargo Commands"})]}),(0,R.jsx)(b.A,{sx:{my:4}}),(0,R.jsxs)(s.A,{component:"section",id:"api-reference","aria-labelledby":"api-reference-heading",sx:{mb:6,position:"relative"},children:[(0,R.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2,mb:2,flexWrap:"wrap"},children:[(0,R.jsx)(g.A,{variant:"h3",id:"api-reference-heading",component:"h2",children:"API Reference"}),(0,R.jsx)(D.A,{text:ae}),(0,R.jsx)(G,{date:F.apiReference,githubEditUrl:Q}),(0,R.jsx)(s.A,{sx:{flexGrow:1}}),(0,R.jsx)(j.A,{filePath:"src/pages/Documentation.tsx"})]}),(0,R.jsxs)(g.A,{variant:"body1",paragraph:!0,children:["For detailed API documentation, see the"," ",(0,R.jsx)("a",{href:"https://docs.rs/hearth-engine",target:"_blank",rel:"noopener noreferrer",style:{color:W.lm.primary.main,textDecoration:"none"},children:"docs.rs page"})," ","or browse the source code on"," ",(0,R.jsx)("a",{href:W.R4.github.repoUrl,target:"_blank",rel:"noopener noreferrer",style:{color:W.lm.primary.main,textDecoration:"none"},children:"GitHub"}),"."]}),(0,R.jsx)(H,{currentSection:"api-reference",onNavigate:B}),(0,R.jsx)(w.A,{sectionId:"api-reference",sectionTitle:"API Reference"})]})]})})]})]}),(0,R.jsx)(v.A,{})]})}},3700:(e,t,n)=>{n.d(t,{A:()=>p});var a=n(9379),r=n(379),i=n(3964),o=n(4857),s=n(6589),c=n(6491),l=n(172),d=n(5333),m=(n(9950),n(4414));const p=e=>{let{filePath:t,variant:n="edit",size:p="medium",sx:g={}}=e;const u=(0,o.A)(),h=(0,s.A)(u.breakpoints.down("sm")),x="".concat("https://github.com/noahsabaj/hearth-website","/edit/main/").concat(t),f="edit"===n?"Edit this page on GitHub":"Improve this section on GitHub",b="edit"===n?"Edit this page on GitHub (opens in new tab)":"Improve this section on GitHub (opens in new tab)";return(0,m.jsx)(c.A,{sx:(0,a.A)((0,a.A)({display:"inline-flex",alignItems:"center"},"small"===p&&h?{display:{xs:"none",sm:"inline-flex"}}:{}),g),children:(0,m.jsx)(l.A,{title:f,placement:h?"bottom":"left",children:(0,m.jsx)(d.A,{href:x,target:"_blank",rel:"noopener noreferrer","aria-label":b,size:p,sx:{color:"text.secondary",transition:"all 0.2s ease","&:hover":{color:"#ff4500",backgroundColor:"rgba(255, 69, 0, 0.08)",transform:"translateY(-2px)"},"& .MuiSvgIcon-root":{fontSize:{xs:"small"===p?"1rem":"1.2rem",sm:"small"===p?"1.2rem":"1.5rem"}},padding:{xs:"small"===p?.5:1,sm:"small"===p?1:1.5}},children:h&&"edit"===n?(0,m.jsx)(r.A,{}):(0,m.jsx)(i.A,{})})})})}},3807:(e,t,n)=>{n.d(t,{A:()=>x});var a=n(3964),r=n(9837),i=n(3935),o=n(6491),s=n(9808),c=n(899),l=n(226),d=n(2053),m=n(9950),p=n(2074),g=n(7270),u=n(4414);const h=(0,m.memo)((()=>(0,u.jsx)(o.A,{component:"footer",role:"contentinfo",sx:{py:g.Es.xxl/g.Es.unit,borderTop:"1px solid ".concat(g.lm.utils.border)},children:(0,u.jsxs)(s.A,{children:[(0,u.jsxs)(c.Ay,{container:!0,spacing:4,justifyContent:"center",sx:{mb:g.Es.lg/g.Es.unit},children:[(0,u.jsx)(c.Ay,{item:!0,children:(0,u.jsx)(l.A,{color:"inherit",component:"a",href:g.R4.github.repoUrl,target:"_blank",rel:"noopener noreferrer",startIcon:(0,u.jsx)(a.A,{}),sx:{color:"rgba(255,255,255,0.7)","&:hover":{color:g.lm.primary.main}},children:"GitHub"})}),(0,u.jsx)(c.Ay,{item:!0,children:(0,u.jsx)(l.A,{color:"inherit",component:p.N_,to:"/docs",startIcon:(0,u.jsx)(r.A,{}),sx:{color:"rgba(255,255,255,0.7)","&:hover":{color:g.lm.primary.main}},children:"Documentation"})}),(0,u.jsx)(c.Ay,{item:!0,children:(0,u.jsx)(l.A,{color:"inherit",component:p.N_,to:"/downloads",startIcon:(0,u.jsx)(i.A,{}),sx:{color:"rgba(255,255,255,0.7)","&:hover":{color:g.lm.primary.main}},children:"Downloads"})})]}),(0,u.jsxs)(d.A,{variant:"body2",color:"text.secondary",align:"center",component:"p",children:["\xa9 2025 Hearth Engine. Built with ",(0,u.jsx)("span",{"aria-label":"fire",children:"\ud83d\udd25"})," in Rust."]})]})})));h.displayName="Footer";const x=h},5991:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(9379),r=n(4320),i=n(5277),o=n(9950),s=n(4414);const c=(0,o.memo)((e=>{let{text:t,className:n}=e;const c=(0,o.useMemo)((()=>(e=>{const t=e.trim().split(/\s+/).length;return t<75?0:Math.ceil(t/150)})(t)),[t]),l=0===c?"< 1 min read":"".concat(c," min read"),d=0===c?"Estimated reading time: less than 1 minute":"Estimated reading time: ".concat(c," minute").concat(c>1?"s":"");return(0,s.jsx)(i.A,(0,a.A)((0,a.A)({icon:(0,s.jsx)(r.A,{"aria-hidden":"true"}),label:l,size:"small"},n&&{className:n}),{},{"aria-label":d,role:"img",sx:{backgroundColor:"rgba(255, 69, 0, 0.1)",color:"#ff4500",border:"1px solid rgba(255, 69, 0, 0.2)",fontSize:"0.75rem",height:24,transition:"all 0.2s ease","& .MuiChip-icon":{color:"#ff4500",fontSize:"0.875rem"},"&:hover":{backgroundColor:"rgba(255, 69, 0, 0.15)",transform:"translateY(-1px)",boxShadow:"0 2px 8px rgba(255, 69, 0, 0.2)"},"&:focus":{outline:"2px solid #ff4500",outlineOffset:"2px"}}}))}));c.displayName="ReadingTime";const l=c},6387:(e,t,n)=>{n.d(t,{A:()=>j});var a=n(9379),r=n(2750),i=n(1995),o=n(2235),s=n(6491),c=n(2053),l=n(172),d=n(5333),m=n(3738),p=n(2306),g=n(226),u=n(4862),h=n(3174),x=n(3291),f=n(8728),b=n(9950),y=n(7270),A=n(4414);const j=e=>{let{sectionId:t,sectionTitle:n}=e;const[j,w]=(0,b.useState)({thumbsUp:0,thumbsDown:0,hasVoted:!1}),[v,k]=(0,b.useState)(!1),[C,P]=(0,b.useState)(""),[S,T]=(0,b.useState)(!1),[R,U]=(0,b.useState)("");(0,b.useEffect)((()=>{const e=localStorage.getItem("hearthFeedback");if(e){const n=JSON.parse(e).filter((e=>e.sectionId===t)),r=n.filter((e=>e.helpful)).length,i=n.filter((e=>!e.helpful)).length,o="hearthVote_".concat(t),s=localStorage.getItem(o);w((0,a.A)({thumbsUp:r,thumbsDown:i,hasVoted:!!s},s&&{userVote:s}))}}),[t]);const G=e=>{if(j.hasVoted)return U("You have already voted on this section"),void T(!0);const r={sectionId:t,helpful:e,timestamp:Date.now()},i=localStorage.getItem("hearthFeedback"),o=i?JSON.parse(i):[];o.push(r),localStorage.setItem("hearthFeedback",JSON.stringify(o)),localStorage.setItem("hearthVote_".concat(t),e?"up":"down"),w((t=>(0,a.A)((0,a.A)({},t),{},{thumbsUp:e?t.thumbsUp+1:t.thumbsUp,thumbsDown:e?t.thumbsDown:t.thumbsDown+1,hasVoted:!0,userVote:e?"up":"down"}))),e?(U("Thank you for your feedback!"),T(!0)):k(!0),"undefined"!==typeof window&&window.gtag&&window.gtag("event","feedback_vote",{section_id:t,section_title:n,vote_type:e?"helpful":"not_helpful"})};return(0,A.jsxs)(A.Fragment,{children:[(0,A.jsxs)(o.A,{component:"section",elevation:2,sx:{p:3,mt:4,mb:2,borderRadius:2,backgroundColor:"rgba(255, 255, 255, 0.05)",border:"1px solid rgba(255, 255, 255, 0.1)"},"aria-label":"Feedback section",children:[(0,A.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",justifyContent:"space-between"},children:[(0,A.jsx)(c.A,{variant:"body1",sx:{fontWeight:500},children:"Was this section helpful?"}),(0,A.jsxs)(s.A,{sx:{display:"flex",alignItems:"center",gap:2},children:[(0,A.jsx)(l.A,{title:j.hasVoted?"You've already voted":"This was helpful",children:(0,A.jsx)("span",{children:(0,A.jsx)(d.A,{onClick:()=>G(!0),disabled:j.hasVoted,"aria-label":"Mark as helpful",sx:{color:"up"===j.userVote?y.lm.status.success:"inherit","&:hover":{backgroundColor:"".concat(y.lm.status.success,"1A")}},children:(0,A.jsx)(r.A,{})})})}),(0,A.jsx)(c.A,{variant:"body2",sx:{minWidth:20,textAlign:"center"},children:j.thumbsUp}),(0,A.jsx)(s.A,{sx:{width:1,height:24,backgroundColor:y.lm.utils.divider}}),(0,A.jsx)(c.A,{variant:"body2",sx:{minWidth:20,textAlign:"center"},children:j.thumbsDown}),(0,A.jsx)(l.A,{title:j.hasVoted?"You've already voted":"This wasn't helpful",children:(0,A.jsx)("span",{children:(0,A.jsx)(d.A,{onClick:()=>G(!1),disabled:j.hasVoted,"aria-label":"Mark as not helpful",sx:{color:"down"===j.userVote?y.lm.status.error:"inherit","&:hover":{backgroundColor:"".concat(y.lm.status.error,"1A")}},children:(0,A.jsx)(i.A,{})})})})]})]}),(0,A.jsx)(x.N,{children:v&&(0,A.jsx)(f.P.div,{initial:{opacity:0,height:0},animate:{opacity:1,height:"auto"},exit:{opacity:0,height:0},transition:{duration:.3},children:(0,A.jsx)(m.A,{in:v,children:(0,A.jsxs)(s.A,{sx:{mt:3},children:[(0,A.jsx)(c.A,{variant:"body2",sx:{mb:2},children:"Please tell us how we can improve this section (optional):"}),(0,A.jsx)(p.A,{multiline:!0,rows:3,fullWidth:!0,value:C,onChange:e=>P(e.target.value),placeholder:"Your feedback helps us improve the documentation...",variant:"outlined","aria-label":"Feedback comment",sx:{"& .MuiOutlinedInput-root":{backgroundColor:y.lm.utils.shimmer}}}),(0,A.jsxs)(s.A,{sx:{mt:2,display:"flex",gap:1,justifyContent:"flex-end"},children:[(0,A.jsx)(g.A,{variant:"outlined",size:"small",onClick:()=>{k(!1),P(""),U("Thank you for your feedback!"),T(!0)},children:"Skip"}),(0,A.jsx)(g.A,{variant:"contained",size:"small",onClick:()=>{if(C.trim()){const e=localStorage.getItem("hearthFeedback");if(e){const n=JSON.parse(e),a=n[n.length-1];a&&a.sectionId===t&&(a.comment=C.trim(),localStorage.setItem("hearthFeedback",JSON.stringify(n)))}"undefined"!==typeof window&&window.gtag&&window.gtag("event","feedback_comment",{section_id:t,section_title:n,comment_length:C.length})}k(!1),P(""),U("Thank you for your detailed feedback!"),T(!0)},sx:{backgroundColor:y.lm.primary.main,"&:hover":{backgroundColor:y.lm.primary.hover}},children:"Submit"})]})]})})})})]}),(0,A.jsx)(u.A,{open:S,autoHideDuration:4e3,onClose:()=>T(!1),anchorOrigin:{vertical:"bottom",horizontal:"center"},children:(0,A.jsx)(h.A,{onClose:()=>T(!1),severity:"success",variant:"filled",sx:{width:"100%"},children:R})})]})}},7566:(e,t,n)=>{n.d(t,{A:()=>A});var a=n(7526),r=n(3777),i=n(8e3),o=n(752),s=n(9939),c=n(2235),l=n(6491),d=n(2053),m=n(7191),p=n(3125),g=n(9919),u=n(172),h=n(5333),x=n(4862),f=n(9950),b=n(4414);const y=(0,f.memo)((e=>{let{children:t,language:n="rust",filePath:y,highlightLines:A=[],showLineNumbers:j=!0,wrapLines:w=!1}=e;const[v,k]=(0,f.useState)(!1),[C,P]=(0,f.useState)(!1),[S,T]=(0,f.useState)(j),[R,U]=(0,f.useState)(w),G=(0,f.useCallback)((async()=>{try{await navigator.clipboard.writeText(t),k(!0)}catch(e){console.error("Failed to copy code:",e)}}),[t]),I=(0,f.useCallback)((()=>{const e=document.getElementById("code-content-".concat(n,"-").concat(y||"default"));if(e){const t=window.getSelection(),n=document.createRange();n.selectNodeContents(e),null===t||void 0===t||t.removeAllRanges(),null===t||void 0===t||t.addRange(n),P(!0)}}),[n,y]),D=(0,f.useCallback)((()=>{k(!1),P(!1)}),[]),_=(0,f.useCallback)((()=>{T((e=>!e))}),[]),E=(0,f.useCallback)((()=>{U((e=>!e))}),[]),B=(0,f.useCallback)((e=>A.some((t=>{if(Array.isArray(t)&&t.length>=2){const[n,a]=t;return e>=n&&e<=a}return e===t}))),[A]),z=(0,f.useMemo)((()=>t.split("\n")),[t]),M=(0,f.useMemo)((()=>z.map((e=>(e=>{let t=e;return t=t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),"rust"===n?(t=t.replace(/\b(use|struct|impl|fn|let|mut|const|pub|mod|match|if|else|for|while|loop|return|break|continue|self|Self|trait|enum|where|async|await|move|ref|static|type|unsafe|extern|crate|as|in)\b/g,'<span class="keyword">$1</span>'),t=t.replace(/\b(u8|u16|u32|u64|u128|usize|i8|i16|i32|i64|i128|isize|f32|f64|bool|char|str|String|Vec|Option|Result|Box|Rc|Arc|RefCell|HashMap|HashSet|BTreeMap|BTreeSet)\b/g,'<span class="type">$1</span>'),t=t.replace(/(\w+)(?=\()/g,'<span class="function">$1</span>'),t=t.replace(/(\w+)!/g,'<span class="macro">$1!</span>'),t=t.replace(/"([^"]*)"/g,'<span class="string">"$1"</span>'),t=t.replace(/'([^']*)'/g,"<span class=\"string\">'$1'</span>"),t=t.replace(/(\/\/[^\n]*)/g,'<span class="comment">$1</span>'),t=t.replace(/(\/\*[\s\S]*?\*\/)/g,'<span class="comment">$1</span>'),t=t.replace(/\b(\d+)\b/g,'<span class="number">$1</span>'),t=t.replace(/(#\[[\s\S]*?\])/g,'<span class="attribute">$1</span>')):"javascript"===n||"js"===n||"typescript"===n||"ts"===n?(t=t.replace(/\b(const|let|var|function|class|if|else|for|while|do|switch|case|break|continue|return|try|catch|finally|throw|async|await|import|export|from|default|extends|implements|interface|type|enum|namespace|module|declare|abstract|static|readonly|private|public|protected)\b/g,'<span class="keyword">$1</span>'),t=t.replace(/\b(string|number|boolean|any|void|null|undefined|never|object|symbol|bigint|unknown)\b/g,'<span class="type">$1</span>'),t=t.replace(/(\w+)(?=\()/g,'<span class="function">$1</span>'),t=t.replace(/"([^"]*)"/g,'<span class="string">"$1"</span>'),t=t.replace(/'([^']*)'/g,"<span class=\"string\">'$1'</span>"),t=t.replace(/`([^`]*)`/g,'<span class="string">`$1`</span>'),t=t.replace(/(\/\/[^\n]*)/g,'<span class="comment">$1</span>'),t=t.replace(/(\/\*[\s\S]*?\*\/)/g,'<span class="comment">$1</span>'),t=t.replace(/\b(\d+)\b/g,'<span class="number">$1</span>')):"python"!==n&&"py"!==n||(t=t.replace(/\b(def|class|if|elif|else|for|while|try|except|finally|with|as|import|from|return|yield|pass|break|continue|lambda|async|await|global|nonlocal|assert|del|raise|and|or|not|in|is)\b/g,'<span class="keyword">$1</span>'),t=t.replace(/\b(int|float|str|list|dict|set|tuple|bool|None|True|False|print|len|range|enumerate|zip|map|filter)\b/g,'<span class="type">$1</span>'),t=t.replace(/(\w+)(?=\()/g,'<span class="function">$1</span>'),t=t.replace(/"([^"]*)"/g,'<span class="string">"$1"</span>'),t=t.replace(/'([^']*)'/g,"<span class=\"string\">'$1'</span>"),t=t.replace(/(#[^\n]*)/g,'<span class="comment">$1</span>'),t=t.replace(/\b(\d+)\b/g,'<span class="number">$1</span>')),t})(e)))),[z,n]);return(0,b.jsxs)(b.Fragment,{children:[(0,b.jsxs)(c.A,{component:"figure",role:"img","aria-label":"Code block in ".concat(n),sx:{bgcolor:"#1e1e1e",my:2,borderRadius:2,border:"1px solid #333",position:"relative",overflow:"hidden","&:hover .action-buttons":{opacity:1},"&:focus-within .action-buttons":{opacity:1}},children:[(0,b.jsxs)(l.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",px:2,py:1,borderBottom:"1px solid #333",bgcolor:"#252525"},children:[(0,b.jsx)(l.A,{sx:{display:"flex",alignItems:"center",gap:1},children:y&&(0,b.jsxs)(d.A,{variant:"caption",sx:{color:"#999",fontFamily:"monospace",display:"flex",alignItems:"center",gap:.5},children:[(0,b.jsx)(a.A,{fontSize:"small"}),y]})}),(0,b.jsx)(m.A,{in:!0,timeout:300,children:(0,b.jsx)(d.A,{variant:"caption",sx:{color:"#666",fontFamily:"monospace",textTransform:"lowercase",backgroundColor:"rgba(255,255,255,0.05)",px:1,py:.5,borderRadius:1},children:n})})]}),(0,b.jsxs)(l.A,{className:"action-buttons",sx:{position:"absolute",top:y?48:8,right:8,display:"flex",gap:.5,opacity:0,transition:"opacity 0.3s ease",zIndex:2},children:[(0,b.jsxs)(p.A,{size:"small",sx:{backgroundColor:"rgba(0,0,0,0.5)",backdropFilter:"blur(10px)","& .MuiToggleButton-root":{color:"#999",borderColor:"transparent","&:hover":{backgroundColor:"rgba(255,255,255,0.1)"},"&.Mui-selected":{color:"#ff4500",backgroundColor:"rgba(255,69,0,0.2)"}}},children:[(0,b.jsx)(g.A,{value:"lineNumbers",selected:S,onChange:_,"aria-label":"Toggle line numbers",children:(0,b.jsx)(u.A,{title:"Toggle line numbers",children:(0,b.jsx)(r.A,{fontSize:"small"})})}),(0,b.jsx)(g.A,{value:"wrap",selected:R,onChange:E,"aria-label":"Toggle line wrap",children:(0,b.jsx)(u.A,{title:"Toggle line wrap",children:(0,b.jsx)(i.A,{fontSize:"small"})})})]}),(0,b.jsxs)(l.A,{sx:{display:"flex",gap:.5,backgroundColor:"rgba(0,0,0,0.5)",backdropFilter:"blur(10px)",borderRadius:1,p:.5},children:[(0,b.jsx)(u.A,{title:"Select all",children:(0,b.jsx)(h.A,{onClick:I,"aria-label":"Select all code",sx:{color:"#999","&:hover":{backgroundColor:"rgba(255,255,255,0.1)",color:"#fff"}},size:"small",children:(0,b.jsx)(o.A,{fontSize:"small"})})}),(0,b.jsx)(u.A,{title:"Copy to clipboard",children:(0,b.jsx)(h.A,{onClick:G,"aria-label":"Copy code to clipboard",sx:{color:"#999","&:hover":{backgroundColor:"rgba(255,255,255,0.1)",color:"#fff"}},size:"small",children:(0,b.jsx)(s.A,{fontSize:"small"})})})]})]}),(0,b.jsx)(l.A,{sx:{p:2,overflow:"auto",maxHeight:"600px","& pre":{margin:0,fontFamily:'"Fira Code", "Consolas", "Monaco", monospace',fontSize:"14px",lineHeight:"1.6",whiteSpace:R?"pre-wrap":"pre",wordBreak:R?"break-word":"normal"},"& .keyword":{color:"#569cd6",fontWeight:"bold"},"& .type":{color:"#4ec9b0"},"& .function":{color:"#dcdcaa"},"& .macro":{color:"#c586c0"},"& .string":{color:"#ce9178"},"& .comment":{color:"#6a9955",fontStyle:"italic"},"& .number":{color:"#b5cea8"},"& .attribute":{color:"#9cdcfe"}},children:(0,b.jsx)("pre",{id:"code-content-".concat(n,"-").concat(y||"default"),role:"code","aria-label":"".concat(n," code snippet"),children:(0,b.jsx)("table",{style:{borderSpacing:0,width:"100%"},children:(0,b.jsx)("tbody",{children:M.map(((e,t)=>{const n=t+1,a=B(n);return(0,b.jsxs)("tr",{style:{backgroundColor:a?"rgba(255, 69, 0, 0.1)":"transparent",transition:"background-color 0.3s ease"},children:[S&&(0,b.jsx)("td",{style:{textAlign:"right",paddingRight:"16px",userSelect:"none",color:a?"#ff4500":"#666",minWidth:"40px",verticalAlign:"top",fontWeight:a?"bold":"normal",transition:"all 0.3s ease"},children:n}),(0,b.jsx)("td",{style:{paddingLeft:"0",width:"100%"},dangerouslySetInnerHTML:{__html:e||"&nbsp;"}})]},t)}))})})})})]}),(0,b.jsx)(x.A,{open:v,autoHideDuration:2e3,onClose:D,message:"Code copied to clipboard!",anchorOrigin:{vertical:"bottom",horizontal:"center"},role:"status","aria-live":"polite"}),(0,b.jsx)(x.A,{open:C,autoHideDuration:2e3,onClose:D,message:"Code selected!",anchorOrigin:{vertical:"bottom",horizontal:"center"},role:"status","aria-live":"polite"})]})}));y.displayName="CodeBlock";const A=y},8199:(e,t,n)=>{n.d(t,{A:()=>s});n(9950);var a=n(2856),r=n(7270),i=n(4414);const o={title:"Hearth Engine",titleTemplate:"%s | Hearth Engine",description:"A powerful and flexible game engine for creating amazing experiences",keywords:"game engine, game development, 3D engine, 2D engine, cross-platform, indie game development",author:"Noah Sabaj",siteUrl:"https://noahsabaj.github.io/hearth-website",twitterUsername:"@hearthengine",defaultImage:"https://noahsabaj.github.io".concat(r.R4.logo.path),themeColor:r.lm.primary.main,locale:"en_US"},s=e=>{let{title:t,description:n=o.description,keywords:s=o.keywords,image:c=o.defaultImage,article:l=!1,pathname:d="",noindex:m=!1,nofollow:p=!1,canonical:g,author:u=o.author,publishedTime:h,modifiedTime:x,twitterCardType:f="summary_large_image",schema:b}=e;const{siteUrl:y}=o,A="".concat(y).concat(d),j=g||A,w=c.startsWith("http")?c:"".concat(y).concat(c),v=t?o.titleTemplate.replace("%s",t):o.title,k=[m?"noindex":"index",p?"nofollow":"follow"].join(","),C={"@context":"https://schema.org","@type":"Organization",name:"Hearth Engine",url:y,logo:"".concat(y).concat(r.R4.logo.path),sameAs:[r.R4.github.repoUrl]},P=l?{"@context":"https://schema.org","@type":"Article",headline:t||o.title,description:n,image:w,author:{"@type":"Person",name:u},publisher:{"@type":"Organization",name:"Hearth Engine",logo:{"@type":"ImageObject",url:"".concat(y).concat(r.R4.logo.path)}},datePublished:h,dateModified:x||h,mainEntityOfPage:{"@type":"WebPage","@id":j}}:null,S=b||(l?P:C);return(0,i.jsxs)(a.mg,{children:[(0,i.jsx)("title",{children:v}),(0,i.jsx)("meta",{name:"description",content:n}),(0,i.jsx)("meta",{name:"keywords",content:s}),(0,i.jsx)("meta",{name:"author",content:u}),(0,i.jsx)("meta",{name:"robots",content:k}),(0,i.jsx)("meta",{name:"theme-color",content:o.themeColor}),(0,i.jsx)("link",{rel:"canonical",href:j}),(0,i.jsx)("meta",{property:"og:type",content:l?"article":"website"}),(0,i.jsx)("meta",{property:"og:title",content:v}),(0,i.jsx)("meta",{property:"og:description",content:n}),(0,i.jsx)("meta",{property:"og:image",content:w}),(0,i.jsx)("meta",{property:"og:image:alt",content:t||o.title}),(0,i.jsx)("meta",{property:"og:url",content:j}),(0,i.jsx)("meta",{property:"og:site_name",content:"Hearth Engine"}),(0,i.jsx)("meta",{property:"og:locale",content:o.locale}),l&&h&&(0,i.jsx)("meta",{property:"article:published_time",content:h}),l&&x&&(0,i.jsx)("meta",{property:"article:modified_time",content:x}),l&&(0,i.jsx)("meta",{property:"article:author",content:u}),(0,i.jsx)("meta",{name:"twitter:card",content:f}),(0,i.jsx)("meta",{name:"twitter:title",content:v}),(0,i.jsx)("meta",{name:"twitter:description",content:n}),(0,i.jsx)("meta",{name:"twitter:image",content:w}),(0,i.jsx)("meta",{name:"twitter:image:alt",content:t||o.title}),(0,i.jsx)("meta",{name:"twitter:site",content:o.twitterUsername}),(0,i.jsx)("meta",{name:"twitter:creator",content:o.twitterUsername}),S&&(0,i.jsx)("script",{type:"application/ld+json",children:JSON.stringify(S)})]})}}}]);